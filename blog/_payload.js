export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS){return {data:{"content-query-AYsYKEZnkk":[{_path:"\u002Fblog\u002Fad-sense",_dir:l,_draft:g,_partial:g,_locale:e,_empty:g,title:"Agregar Google Analytics a una aplicación de Nuxt3",description:G,date:C,author:r,body:{type:m,children:[{type:a,tag:c,props:{},children:[{type:b,value:G}]},{type:a,tag:c,props:{},children:[{type:b,value:"Para agregar Google Analytics a tu aplicación de Nuxt3, sigue estos sencillos pasos:"}]},{type:a,tag:t,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"Instala el paquete vue-gtag-next ejecutando el siguiente comando:"}]}]},{type:a,tag:d,props:{code:H,language:"css",meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:H}]}]}]},{type:a,tag:t,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"Crea un nuevo archivo en la carpeta plugins llamado vue-gtag.client.js."}]}]},{type:a,tag:t,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"Agrega el siguiente código al archivo de plugin:"}]}]},{type:a,tag:d,props:{code:I,language:x,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:I}]}]}]},{type:a,tag:t,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"Reemplaza 'GA_MEASUREMENT_ID' con tu ID de medición de Google Analytics real."}]}]},{type:a,tag:t,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"Cuando ejecutes tu sitio web en el cliente, verás que Google Analytics se ha importado a tu sitio web."}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Nuxt leerá automáticamente los archivos en tu directorio de plugins y los cargará. Puedes definir qué plugins se usarán en el servidor o en el cliente agregando un sufijo de .server o .client al nombre del archivo. Estos se registran automáticamente en tu aplicación de Nuxt, por lo que ya no es necesario definirlos en el archivo nuxt.config."}]},{type:a,tag:c,props:{},children:[{type:b,value:"El uso de plugins en Nuxt3 facilita la integración con servicios externos, como Google Analytics, y mejora el rendimiento y la escalabilidad general de tu aplicación."}]}],toc:{title:e,searchDepth:f,depth:f,links:[]}},_type:n,_id:"content:blog:ad-sense.md",_source:o,_file:"blog\u002Fad-sense.md",_extension:p},{_path:"\u002Fblog\u002Fconfiguracion-de-modulos",_dir:l,_draft:g,_partial:g,_locale:e,_empty:g,title:J,description:K,author:r,date:"2023-02-15T00:00:00.000Z",body:{type:m,children:[{type:a,tag:L,props:{id:"cómo-configurar-los-módulos"},children:[{type:b,value:J}]},{type:a,tag:c,props:{},children:[{type:b,value:K}]},{type:a,tag:d,props:{code:M,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:M}]}]}]}],toc:{title:e,searchDepth:f,depth:f,links:[]}},_type:n,_id:"content:blog:configuracion-de-modulos.md",_source:o,_file:"blog\u002Fconfiguracion-de-modulos.md",_extension:p},{_path:"\u002Fblog\u002Ferror-en-about",_dir:l,_draft:g,_partial:g,_locale:e,_empty:g,title:"Error en \"Acerca de\"",description:N,author:r,date:O,body:{type:m,children:[{type:a,tag:c,props:{},children:[{type:b,value:N}]},{type:a,tag:d,props:{code:P,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:P}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Este fue usando el método fecth, pero no carga."}]},{type:a,tag:d,props:{code:Q,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:Q}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Otra opción:"}]},{type:a,tag:d,props:{code:R,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:R}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Acá había un problema porque parece ser código para Nuxtjs2\r\nEl actual se supone que despliega los errores, pero se queda en Loading..."}]}],toc:{title:e,searchDepth:f,depth:f,links:[]}},_type:n,_id:"content:blog:error-en-about.md",_source:o,_file:"blog\u002Ferror-en-about.md",_extension:p},{_path:"\u002Fblog\u002Ffonts-awesome",_dir:l,_draft:g,_partial:g,_locale:e,_empty:g,title:"Usando iconos FontAwesome con Nuxt 3",description:S,date:"2023-03-25",author:r,body:{type:m,children:[{type:a,tag:c,props:{},children:[{type:b,value:S}]},{type:a,tag:c,props:{},children:[{type:b,value:"Esta es la misma configuración que uso en mi propio sitio web, y puedes ver el código fuente completo en el repositorio de GitHub aquí."}]},{type:a,tag:k,props:{id:T},children:[{type:b,value:U}]},{type:a,tag:c,props:{},children:[{type:b,value:"Ejecuta el siguiente comando para agregar el componente vue-fontawesome."}]},{type:a,tag:d,props:{code:V,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:V}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"También necesitarás instalar el paquete de iconos que deseas utilizar. Para mi proyecto, agregué los paquetes svg-core y free-brands-svg-icons."}]},{type:a,tag:d,props:{code:W,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:W}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Después de la instalación, las dependencias en el archivo package.json se verán así:"}]},{type:a,tag:d,props:{code:X,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:X}]}]}]},{type:a,tag:k,props:{id:Y},children:[{type:b,value:Z}]},{type:a,tag:c,props:{},children:[{type:b,value:"Para usar los iconos de FontAwesome en Nuxt 3, deberás agregar lo siguiente al arreglo css en tu archivo nuxt.config."}]},{type:a,tag:d,props:{code:_,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:_}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Luego, crea un directorio de plugins en la raíz de tu aplicación Nuxt 3 y crea un archivo fontawesome.js dentro."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Este archivo es donde registraremos los iconos en nuestra librería y agregaremos el componente "},{type:a,tag:D,props:{},children:[{type:b,value:" para que se importe automáticamente en todas nuestras páginas y componentes de Nuxt."}]}]},{type:a,tag:k,props:{id:$},children:[{type:b,value:aa}]},{type:a,tag:c,props:{},children:[{type:b,value:"Si solo estás usando algunos iconos, puedes subconjuntar qué iconos se agregan a la librería para mejorar el rendimiento. En este ejemplo, solo estoy usando los iconos TwitteSquare, Twitch y GitHubSquare, por lo que no hay necesidad de instalar toda la librería."}]},{type:a,tag:c,props:{},children:[{type:b,value:"En mi archivo fontawesome.js a continuación, solo estoy importando los iconos que necesito de @fortawesome\u002Ffree-brands-svg-icons, luego pasando esos valores a través de library.add()."}]},{type:a,tag:d,props:{code:ab,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:ab}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Luego, agrego el componente FontAwesomeIcon y lo registro como "},{type:a,tag:D,props:{},children:[{type:b,value:" para que pueda usarlo en mi proyecto.\nImportar sin subconjuntos"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Si deseas importar toda la librería de iconos, importarías y pasarías el nombre completo de la librería, así:"}]},{type:a,tag:d,props:{code:ac,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:ac}]}]}]},{type:a,tag:k,props:{id:ad},children:[{type:b,value:ae}]},{type:a,tag:c,props:{},children:[{type:b,value:"Ahora puedes usar el componente "},{type:a,tag:D,props:{},children:[{type:b,value:" en cualquiera de tus páginas o componentes de Nuxt y pasar la librería de iconos y el nombre al atributo icon."}]}]},{type:a,tag:d,props:{code:af,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:af}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Si deseas usar valores dinámicos, pasa la librería y el nombre del icono como un array al atributo "},{type:a,tag:"icon",props:{},children:[]},{type:b,value:". Por ejemplo, aquí estamos mostrando los iconos vinculados en función de los valores de una matriz socialLinks."}]},{type:a,tag:d,props:{code:ag,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:ag}]}]}]},{type:a,tag:k,props:{id:ah},children:[{type:b,value:ai}]},{type:a,tag:c,props:{},children:[{type:b,value:"Eso debería ser suficiente para que empieces, pero aquí hay enlaces a más documentación sobre FontAwesome con Nuxt y Subsetting."}]},{type:a,tag:s,props:{},children:[{type:a,tag:j,props:{},children:[{type:a,tag:y,props:{href:"https:\u002F\u002Ffontawesome.com\u002Fdocs\u002Fweb\u002Fuse-with\u002Fvue\u002Fuse-with#nuxt",rel:[z]},children:[{type:b,value:"FontAwesome con Nuxt Docs"}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:y,props:{href:"https:\u002F\u002Ffontawesome.com\u002Fdocs\u002Fapis\u002Fjavascript\u002Ficon-library#subsetting",rel:[z]},children:[{type:b,value:"FontAwesome Subsetting Docs"}]}]}]}],toc:{title:e,searchDepth:f,depth:f,links:[{id:T,depth:f,text:U},{id:Y,depth:f,text:Z},{id:$,depth:f,text:aa},{id:ad,depth:f,text:ae},{id:ah,depth:f,text:ai}]}},_type:n,_id:"content:blog:fonts-awesome.md",_source:o,_file:"blog\u002Ffonts-awesome.md",_extension:p},{_path:"\u002Fblog\u002Fgh-pages",_dir:l,_draft:g,_partial:g,_locale:e,_empty:g,title:"Cómo publicar un sitio web estático generado por Nuxt.js en GitHub Pages",description:aj,date:"2023-03-13",body:{type:m,children:[{type:a,tag:c,props:{},children:[{type:b,value:aj}]},{type:a,tag:k,props:{id:ak},children:[{type:b,value:al}]},{type:a,tag:c,props:{},children:[{type:b,value:"Lo primero que debes hacer es instalar la herramienta gh-pages. Puedes hacerlo ejecutando el siguiente comando en la terminal de tu proyecto:"}]},{type:a,tag:d,props:{code:am,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:am}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Esto instalará la herramienta gh-pages en tu proyecto y la añadirá a la sección devDependencies de tu archivo package.json."}]},{type:a,tag:k,props:{id:an},children:[{type:b,value:ao}]},{type:a,tag:c,props:{},children:[{type:b,value:"A continuación, debes generar el sitio web estático con Nuxt.js. Para hacerlo, debes ejecutar el siguiente comando en la terminal de tu proyecto:"}]},{type:a,tag:d,props:{code:ap,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:ap}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Este comando generará el sitio web estático en la carpeta dist de tu proyecto."}]},{type:a,tag:k,props:{id:aq},children:[{type:b,value:ar}]},{type:a,tag:c,props:{},children:[{type:b,value:"Antes de poder publicar el sitio web estático en GitHub Pages, debes configurar la herramienta gh-pages. Para hacerlo, debes añadir las siguientes líneas a la sección scripts de tu archivo package.json:"}]},{type:a,tag:d,props:{code:as,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:as}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Esto configurará la herramienta gh-pages para que publique el sitio web estático desde la carpeta dist. La línea predeploy ejecutará el comando nuxt generate antes de ejecutar el comando gh-pages, de forma que el sitio web estático siempre esté actualizado antes de publicarlo."}]},{type:a,tag:k,props:{id:at},children:[{type:b,value:au}]},{type:a,tag:c,props:{},children:[{type:b,value:"Por último, puedes publicar el sitio web estático en GitHub Pages ejecutando el siguiente comando en la terminal de tu proyecto:"}]},{type:a,tag:d,props:{code:av,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:av}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Este comando publicará el sitio web estático en la rama gh-pages de tu repositorio de GitHub."}]},{type:a,tag:k,props:{id:u},children:[{type:b,value:v}]},{type:a,tag:c,props:{},children:[{type:b,value:"Con la herramienta gh-pages, publicar un sitio web estático generado por Nuxt.js en GitHub Pages es muy sencillo. Siguiendo estos sencillos pasos, podrás publicar tu sitio web en GitHub Pages en pocos minutos."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Espero que esta entrada de blog te haya resultado útil. Si tienes alguna pregunta o comentario, no dudes en dejármelo en los comentarios. ¡Gracias por leer!"}]}],toc:{title:e,searchDepth:f,depth:f,links:[{id:ak,depth:f,text:al},{id:an,depth:f,text:ao},{id:aq,depth:f,text:ar},{id:at,depth:f,text:au},{id:u,depth:f,text:v}]}},_type:n,_id:"content:blog:gh-pages.md",_source:o,_file:"blog\u002Fgh-pages.md",_extension:p},{_path:"\u002Fblog\u002Fgithub-actions",_dir:l,_draft:g,_partial:g,_locale:e,_empty:g,title:"Cómo implementar Github Actions en un proyecto Nuxtjs 3",description:aw,date:A,body:{type:m,children:[{type:a,tag:c,props:{},children:[{type:b,value:aw}]},{type:a,tag:k,props:{id:ax},children:[{type:b,value:ay}]},{type:a,tag:c,props:{},children:[{type:b,value:"GitHub Actions es una plataforma de CI\u002FCD integrada en GitHub. Te permite automatizar tareas en tu repositorio, como la construcción y prueba de tu código, y la implementación de tu aplicación. Con GitHub Actions, puedes crear flujos de trabajo que se activan por eventos como la creación de solicitudes de extracción, la creación de etiquetas, o simplemente al realizar un commit en una rama determinada."}]},{type:a,tag:k,props:{id:az},children:[{type:b,value:aA}]},{type:a,tag:c,props:{},children:[{type:b,value:"Para usar GitHub Actions en tu proyecto de Nuxt.js 3, debes tener una cuenta de GitHub y un repositorio en GitHub. Si no tienes una cuenta, puedes registrarte gratuitamente en el sitio web de GitHub. Si aún no has creado un repositorio, puedes hacerlo desde la página de inicio de GitHub."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Además, debes tener Node.js y NPM instalados en tu computadora para poder ejecutar los comandos necesarios. Si aún no los tienes instalados, puedes descargar Node.js y NPM desde el sitio web oficial de Node.js."}]},{type:a,tag:k,props:{id:aB},children:[{type:b,value:aC}]},{type:a,tag:c,props:{},children:[{type:b,value:"El primer paso para configurar GitHub Actions es crear un archivo de flujo de trabajo (workflow file) en tu repositorio. Para hacer esto, crea un archivo con el nombre main.yml en la carpeta .github\u002Fworkflows\u002F en la raíz de tu repositorio."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Este archivo de flujo de trabajo define cómo GitHub Actions debe construir, probar y desplegar tu aplicación de Nuxt.js 3. Aquí hay un ejemplo de cómo se puede configurar un flujo de trabajo básico:"}]},{type:a,tag:d,props:{code:aD,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:aD}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"En este ejemplo, el flujo de trabajo se activa cuando se realiza un push en la rama main. El flujo de trabajo se ejecuta en una máquina virtual de Ubuntu, donde se realizan las siguientes acciones:"}]},{type:a,tag:d,props:{code:aE,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:aE}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Es importante tener en cuenta que debes reemplazar la ACCESS_TOKEN con tu propia clave de acceso personal de GitHub. Puedes crear una clave de acceso personal en la sección \"Settings\" de tu cuenta de GitHub. Luego, debes agregar esta clave como un secreto en tu repositorio, utilizando la sección \"Settings\" y la opción \"Secrets\".\nDespliegue de la aplicación"}]},{type:a,tag:c,props:{},children:[{type:b,value:"Una vez que hayas configurado GitHub Actions en tu repositorio, la aplicación se construirá y se desplegará automáticamente cada vez que se realice un push en la rama main."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Para acceder a la aplicación desplegada, ve a la página de GitHub Pages de tu repositorio. Si has configurado todo correctamente, deberías ver tu aplicación en línea."}]},{type:a,tag:k,props:{id:u},children:[{type:b,value:v}]},{type:a,tag:c,props:{},children:[{type:b,value:"GitHub Actions es una plataforma poderosa y fácil de usar para la integración continua y la implementación continua. En este artículo, hemos visto cómo configurar GitHub Actions para un proyecto de Nuxt.js 3 y cómo desplegar automáticamente la aplicación en GitHub Pages. Si aún no has utilizado GitHub Actions en tus proyectos, te recomiendo que lo pruebes y veas cómo puede automatizar tus flujos de trabajo y mejorar la calidad de tu código. ¡Buena suerte!"}]}],toc:{title:e,searchDepth:f,depth:f,links:[{id:ax,depth:f,text:ay},{id:az,depth:f,text:aA},{id:aB,depth:f,text:aC},{id:u,depth:f,text:v}]}},_type:n,_id:"content:blog:github-actions.md",_source:o,_file:"blog\u002Fgithub-actions.md",_extension:p},{_path:"\u002Fblog\u002Fgoogle-ads",_dir:l,_draft:g,_partial:g,_locale:e,_empty:g,title:"Cómo Agregar Etiquetas de Google Ads al Encabezado de una Aplicación Nuxt.js 3",description:"En Nuxt.js 3, puedes agregar las etiquetas de Google Ads al encabezado de tu aplicación editando el archivo nuxt.config.js. Para hacer esto, agrega el siguiente código en la sección head:",date:C,author:r,body:{type:m,children:[{type:a,tag:c,props:{},children:[{type:b,value:"En Nuxt.js 3, puedes agregar las etiquetas de Google Ads al encabezado de tu aplicación editando el archivo "},{type:a,tag:q,props:{},children:[{type:b,value:E}]},{type:b,value:". Para hacer esto, agrega el siguiente código en la sección "},{type:a,tag:q,props:{},children:[{type:b,value:"head"}]},{type:b,value:aF}]},{type:a,tag:d,props:{code:aG,language:x,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:aG}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Reemplaza TU-CÓDIGO-DE-CLIENTE-DE-GOOGLE-ADSENSE con el código de cliente que obtuviste de Google AdSense."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Recuerda que para que los anuncios se muestren correctamente, debes seguir las políticas de Google AdSense y asegurarte de que tu sitio cumpla con los requisitos de calidad y contenido."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Espero que sea útil. ¡No dudes en hacernos saber si tienes alguna otra pregunta!"}]}],toc:{title:e,searchDepth:f,depth:f,links:[]}},_type:n,_id:"content:blog:google-ads.md",_source:o,_file:"blog\u002Fgoogle-ads.md",_extension:p},{_path:"\u002Fblog\u002Fhugo-github-actions",_dir:l,_draft:g,_partial:g,_locale:e,_empty:g,title:"Cómo implementar Github Actions en Hugo Blog con S3",description:aH,date:A,body:{type:m,children:[{type:a,tag:c,props:{},children:[{type:b,value:aH}]},{type:a,tag:c,props:{},children:[{type:b,value:"Primero, debemos crear un archivo de configuración para la acción de Github. Para hacer esto, crea una carpeta llamada .github\u002Fworkflows\u002F y dentro de ella un archivo llamado main.yml. En este archivo, configuraremos los desencadenadores y los trabajos para nuestra acción."}]},{type:a,tag:c,props:{},children:[{type:b,value:"El siguiente código muestra cómo debes configurar el archivo main.yml:"}]},{type:a,tag:d,props:{code:aI,language:"less",meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:aI}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"En este archivo de configuración, hemos definido que la acción solo se activará cuando alguien realice un cambio en la rama principal. También se ha especificado que se ejecutará en un contenedor Docker de Ubuntu 18.04 y se realizarán los siguientes pasos:"}]},{type:a,tag:s,props:{},children:[{type:a,tag:j,props:{},children:[{type:b,value:"Clonar el repositorio y sus submódulos."}]},{type:a,tag:j,props:{},children:[{type:b,value:"Configurar Hugo."}]},{type:a,tag:j,props:{},children:[{type:b,value:"Configurar las credenciales de AWS."}]},{type:a,tag:j,props:{},children:[{type:b,value:"Construir el sitio web con Hugo."}]},{type:a,tag:j,props:{},children:[{type:b,value:"Desplegar el sitio web en un Bucket de AWS S3."}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Para completar la configuración de las credenciales de AWS, debes crear dos secretos en la sección \"Secretos\" de la configuración de tu repositorio en Github. Uno llamado AWS_ACCESS_KEY_ID con el valor de tu ID de acceso de AWS y otro llamado AWS_SECRET_ACCESS_KEY con el valor de tu clave de acceso secreta de AWS."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Con esto, ya hemos configurado Github Actions para desplegar nuestro sitio web automáticamente cada vez que realizamos un cambio en la rama principal. Ahora, ya no tendrás que preocuparte por el proceso de construcción y despliegue, lo que te permitirá centrarte en la creación de contenido para tu blog."}]}],toc:{title:e,searchDepth:f,depth:f,links:[]}},_type:n,_id:"content:blog:hugo-github-actions.md",_source:o,_file:"blog\u002Fhugo-github-actions.md",_extension:p},{_path:"\u002Fblog\u002Fjson-limpio",_dir:l,_draft:g,_partial:g,_locale:e,_empty:g,title:"Cómo limpiar un string para JSON con Python",description:aJ,date:"2023-03-18",author:r,body:{type:m,children:[{type:a,tag:c,props:{},children:[{type:b,value:aJ}]},{type:a,tag:c,props:{},children:[{type:b,value:"Hoy en día, tuve ese problema y pasé varias horas tratando de solucionarlo. Afortunadamente, me puse en contacto con el equipo de chatgpt, y me proporcionaron una función útil que me permitió limpiar el string y asegurarme de que fuera compatible con JSON."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Aquí está la función que me proporcionaron:"}]},{type:a,tag:d,props:{code:aK,language:w,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:aK}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Esta función primero elimina caracteres no compatibles con el formato JSON utilizando una expresión regular. Luego, elimina los saltos de línea y los caracteres de retorno de carro. Finalmente, comprueba si el string se puede cargar como JSON. Si el string no se puede cargar como JSON, la función reemplaza los caracteres no compatibles con un espacio."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Con esta función, pude limpiar mis strings problemáticos y asegurarme de que estuvieran en formato JSON compatible. Espero que esta función también te resulte útil en tu trabajo con JSON en Python."}]}],toc:{title:e,searchDepth:f,depth:f,links:[]}},_type:n,_id:"content:blog:json-limpio.md",_source:o,_file:"blog\u002Fjson-limpio.md",_extension:p},{_path:"\u002Fblog\u002Fnuxtjs-feeds",_dir:l,_draft:g,_partial:g,_locale:e,_empty:g,title:"RSS feeds para static page en Nuxtjs 3",description:aL,date:"2023-03-31",author:r,body:{type:m,children:[{type:a,tag:c,props:{},children:[{type:b,value:aL}]},{type:a,tag:c,props:{},children:[{type:b,value:"Primero, traté de agregar el módulo \"@nuxtjs\u002Ffeed\" a mi archivo nuxt.config.ts, pero recibí un error que decía: \"Cannot read properties of undefined (reading 'feed')\". Después de investigar un poco, descubrí que esto se debía a un problema con el paquete 'nuxt-ts' que estaba usando en mi proyecto."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Luego, intenté refactorizar mi archivo nuxt.config.ts para agregar el feed manualmente, pero todavía no tuve éxito. Recibí el mismo error que antes, \"Cannot read properties of undefined (reading 'feed')\"."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Finalmente, traté de solucionar el problema desactivando la extracción experimental de carga útil para la salida totalmente estática, pero todavía no pude hacer que funcionara."}]},{type:a,tag:c,props:{},children:[{type:b,value:"En resumen, hoy ha sido un día de muchos intentos fallidos para agregar un feed RSS a mi aplicación NuxtJS 3. Aunque es frustrante, seguiré investigando y trabajando en una solución. Espero tener más suerte en el futuro."}]}],toc:{title:e,searchDepth:f,depth:f,links:[]}},_type:n,_id:"content:blog:nuxtjs-feeds.md",_source:o,_file:"blog\u002Fnuxtjs-feeds.md",_extension:p},{_path:"\u002Fblog\u002Fopenai",_dir:l,_draft:g,_partial:g,_locale:e,_empty:g,title:"Cómo conectar al API de ChatGPT con Python",description:"Antes de empezar, asegúrate de tener una cuenta en OpenAI y haber creado una API Key en la plataforma. Si no tienes una cuenta, puedes crear una gratuita en https:\u002F\u002Fbeta.openai.com\u002Fsignup\u002F y seguir las instrucciones para generar una API Key.",date:"2023-03-21",author:r,body:{type:m,children:[{type:a,tag:c,props:{},children:[{type:b,value:"Antes de empezar, asegúrate de tener una cuenta en OpenAI y haber creado una API Key en la plataforma. Si no tienes una cuenta, puedes crear una gratuita en "},{type:a,tag:y,props:{href:aM,rel:[z]},children:[{type:b,value:aM}]},{type:b,value:" y seguir las instrucciones para generar una API Key."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Una vez que tengas tu API Key, sigue los siguientes pasos:"}]},{type:a,tag:c,props:{},children:[{type:b,value:"Instalar la librería openai de Python. Puedes hacerlo mediante el siguiente comando en tu terminal:"}]},{type:a,tag:d,props:{code:aN,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:aN}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Importar la librería openai y configurar la conexión con tu API Key:"}]},{type:a,tag:d,props:{code:aO,language:w,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:aO}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Llamar al modelo de lenguaje que quieras utilizar. En este caso, usaremos el modelo davinci, que es el más avanzado disponible en la plataforma. También puedes probar otros modelos, como curie, babbage, ada, entre otros."}]},{type:a,tag:d,props:{code:aP,language:w,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:aP}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Finalmente, puedes hacer una solicitud al API para generar una respuesta a partir de una entrada de texto:"}]},{type:a,tag:d,props:{code:aQ,language:w,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:aQ}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"En este ejemplo, estamos generando una respuesta a partir de la entrada de texto \"Hola, ¿cómo estás?\". max_tokens indica la longitud     máxima de la respuesta generada."}]},{type:a,tag:d,props:{code:aR,language:w,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:aR}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Finalmente, puedes imprimir la respuesta generada mediante el siguiente código:"}]},{type:a,tag:d,props:{code:aS,language:w,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:aS}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Este código imprimirá la respuesta generada por el modelo de OpenAI a partir de la entrada de texto proporcionada."}]}],toc:{title:e,searchDepth:f,depth:f,links:[]}},_type:n,_id:"content:blog:openai.md",_source:o,_file:"blog\u002Fopenai.md",_extension:p},{_path:"\u002Fblog\u002Fproblemas",_dir:l,_draft:g,_partial:g,_locale:e,_empty:g,title:"Enfrentando Problemas con GitHub Actions y mi Aplicación de NuxtJS 3",description:aT,date:A,body:{type:m,children:[{type:a,tag:c,props:{},children:[{type:b,value:aT}]},{type:a,tag:k,props:{id:aU},children:[{type:b,value:aV}]},{type:a,tag:c,props:{},children:[{type:b,value:"Mi primer problema fue que no configuré correctamente mi archivo main.yml para que GitHub Actions ejecutara los pasos necesarios para implementar mi aplicación en GitHub Pages. No me di cuenta de que la mayoría de los pasos necesarios, como instalar las dependencias y generar los archivos de construcción, debían ser configurados en el archivo main.yml."}]},{type:a,tag:c,props:{},children:[{type:b,value:"La solución para este problema fue agregar los pasos necesarios en el archivo main.yml para que GitHub Actions pudiera construir y publicar mi aplicación. Utilicé los siguientes pasos en mi archivo main.yml:"}]},{type:a,tag:d,props:{code:aW,language:B,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:aW}]}]}]},{type:a,tag:k,props:{id:aX},children:[{type:b,value:aY}]},{type:a,tag:c,props:{},children:[{type:b,value:"Después de solucionar el primer problema, me encontré con otro problema. Cuando GitHub Actions intentó construir mi aplicación, obtuvo un error que decía que el comando 'nuxt build' no estaba definido en el archivo package.json."}]},{type:a,tag:c,props:{},children:[{type:b,value:"La solución para este problema fue agregar el comando 'nuxt build' en el archivo package.json y asegurarme de que apuntara al directorio correcto. En mi caso, tuve que configurar \"nuxt build\" para que apuntara a \"dist\". Creo que el programa luego pasa los archivos a \".output\u002Fpublic\"."}]},{type:a,tag:k,props:{id:aZ},children:[{type:b,value:a_}]},{type:a,tag:c,props:{},children:[{type:b,value:"Después de solucionar el problema anterior, intenté usar las acciones de JamesIves para implementar mi aplicación en GitHub Pages. Sin embargo, estas acciones no funcionaron y recibí errores en mi implementación."}]},{type:a,tag:c,props:{},children:[{type:b,value:"La solución para este problema fue usar la acción \"peaceiris\u002Factions-gh-pages@v3\". Esta acción funcionó correctamente y me permitió implementar mi aplicación de NuxtJS 3 en GitHub Pages sin problemas."}]},{type:a,tag:k,props:{id:u},children:[{type:b,value:v}]},{type:a,tag:c,props:{},children:[{type:b,value:"En resumen, enfrenté varios problemas al intentar implementar mi aplicación de NuxtJS 3 en GitHub Pages usando GitHub Actions. Sin embargo, después de solucionar estos problemas, pude publicar mi aplicación en GitHub Pages con éxito. Espero que al compartir mis problemas y soluciones, pueda ayudar a otros desarrolladores que enfrentan problemas similares al implementar sus aplicaciones en GitHub Pages con GitHub Actions."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Si estás utilizando NuxtJS 3 en tu proyecto y quieresimplementar tu aplicación en GitHub Pages con GitHub Actions, asegúrate de seguir las siguientes recomendaciones:"}]},{type:a,tag:s,props:{},children:[{type:a,tag:j,props:{},children:[{type:b,value:"Configura correctamente tu archivo main.yml: Asegúrate de incluir todos los pasos necesarios para construir y publicar tu aplicación. En particular, verifica que el comando para construir tu aplicación sea el correcto y que la ruta para la publicación sea la adecuada."}]},{type:a,tag:j,props:{},children:[{type:b,value:"Verifica que tu archivo nuxt.config.js esté configurado correctamente: Asegúrate de que la propiedad generate.dir esté configurada correctamente. En particular, asegúrate de que apunte al directorio correcto donde NuxtJS 3 genera los archivos de construcción para tu aplicación."}]},{type:a,tag:j,props:{},children:[{type:b,value:"Publica en la rama gh-pages en lugar de la rama master: Ten en cuenta que GitHub Pages cambió recientemente la rama predeterminada de master a main. Por lo tanto, debes publicar en la rama gh-pages."}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"En general, utilizar GitHub Actions para implementar tus aplicaciones en GitHub Pages es una gran manera de automatizar el proceso y ahorrar tiempo. Aunque puedes enfrentar algunos problemas al principio, con un poco de solución de problemas y paciencia, puedes hacer que funcione para tu proyecto."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Espero que mi experiencia pueda ayudarte en tu proyecto y que puedas evitar algunos de los problemas que enfrenté. ¡Buena suerte en tus implementaciones de GitHub Pages con GitHub Actions!"}]}],toc:{title:e,searchDepth:f,depth:f,links:[{id:aU,depth:f,text:aV},{id:aX,depth:f,text:aY},{id:aZ,depth:f,text:a_},{id:u,depth:f,text:v}]}},_type:n,_id:"content:blog:problemas.md",_source:o,_file:"blog\u002Fproblemas.md",_extension:p},{_path:"\u002Fblog\u002Frobots",_dir:l,_draft:g,_partial:g,_locale:e,_empty:g,title:"Cómo implementar un archivo robots.txt en un proyecto Nuxt Js",description:a$,date:"2023-03-12",body:{type:m,children:[{type:a,tag:c,props:{},children:[{type:b,value:a$}]},{type:a,tag:c,props:{},children:[{type:b,value:"Hay varias formas de agregar robots.txt y es tan fácil como escribirlo manualmente en la carpeta \"statics\". Pero para este tutorial, usaremos nuxtjs\u002Frobots ya que es más flexible y el contenido de robots.txt se puede manipular fácilmente."}]},{type:a,tag:k,props:{id:ba},children:[{type:b,value:bb}]},{type:a,tag:c,props:{},children:[{type:b,value:"Lo primero es lo primero, instala el paquete de robots y defínelo en la matriz de módulos de nuxt.config.js."}]},{type:a,tag:d,props:{code:bc,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bc}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Para definir la configuración de robots, podemos pasar un objeto, una matriz o una función, donde cada método tiene sus propios casos de uso."}]},{type:a,tag:d,props:{code:bd,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bd}]}]}]},{type:a,tag:k,props:{id:be},children:[{type:b,value:bf}]},{type:a,tag:c,props:{},children:[{type:b,value:"En este caso, define el código de la siguiente manera y permitirá que todos los agentes de usuario (bot) rastreen el sitio. En cambio, si el valor de Disallow es \"\u002F\", entonces no permitimos que se rastree ninguna de las páginas."}]},{type:a,tag:d,props:{code:bg,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bg}]}]}]},{type:a,tag:k,props:{id:bh},children:[{type:b,value:bi}]},{type:a,tag:c,props:{},children:[{type:b,value:"Si desea especificar una configuración para un agente de usuario diferente, pase la matriz de objetos como valor de robots y se comportará como se define."}]},{type:a,tag:d,props:{code:bj,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bj}]}]}]},{type:a,tag:k,props:{id:bk},children:[{type:b,value:bl}]},{type:a,tag:c,props:{},children:[{type:b,value:"También puede pasar una función como valor de robots y, en este caso, definir la lógica o definir condicionalmente el valor del robot que desea que sea."}]},{type:a,tag:d,props:{code:bm,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bm}]}]}]},{type:a,tag:k,props:{id:bn},children:[{type:b,value:bo}]},{type:a,tag:c,props:{},children:[{type:b,value:"Finalmente, ejecuta \"yarn dev\" y ahora puedes visitar \u002Frobots.txt para ver el valor de robots.txt que has definido."}]},{type:a,tag:d,props:{code:bp,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bp}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Este post fue originalmente publicado en PostSrc 🔥🔥🔥. Si te gustan este tipo de tutoriales, realmente apreciaría si le das una visita."}]}],toc:{title:e,searchDepth:f,depth:f,links:[{id:ba,depth:f,text:bb},{id:be,depth:f,text:bf},{id:bh,depth:f,text:bi},{id:bk,depth:f,text:bl},{id:bn,depth:f,text:bo}]}},_type:n,_id:"content:blog:robots.md",_source:o,_file:"blog\u002Frobots.md",_extension:p},{_path:"\u002Fblog\u002Fsalvaje",_dir:l,_draft:g,_partial:g,_locale:e,_empty:g,title:"Cómo conectar Google Spreadsheets a ChatGPT",description:bq,author:r,date:"2023-02-20T00:00:00.000Z",body:{type:m,children:[{type:a,tag:c,props:{},children:[{type:b,value:bq}]},{type:a,tag:d,props:{code:br,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:br}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"En la columna B el prompt:"}]},{type:a,tag:d,props:{code:bs,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bs}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"En la columna B, ChatGPT proporcionó una lista de los 10 mejores libros sobre emprendimiento. Luego en el D2 hicimos una fórmula para conjuntar el prompt de A2 con el de B2 que contiene el título del libro proporcionado por ChatGPT:"}]},{type:a,tag:d,props:{code:bt,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bt}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"En H2 le pedimos una tabla:"}]},{type:a,tag:d,props:{code:bu,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bu}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Sólo no recuerdo cómo hicimos la lista de la fila F :\u002F"}]}],toc:{title:e,searchDepth:f,depth:f,links:[]}},_type:n,_id:"content:blog:salvaje.md",_source:o,_file:"blog\u002Fsalvaje.md",_extension:p},{_path:"\u002Fblog\u002Fserver-rendering",_dir:l,_draft:g,_partial:g,_locale:e,_empty:g,title:"Cómo implementar el Renderizado del Lado del Servidor en una aplicación Nuxt.js",description:bv,date:"2023-03-12T00:00:00.000Z",body:{type:m,children:[{type:a,tag:c,props:{},children:[{type:b,value:bv}]},{type:a,tag:c,props:{},children:[{type:b,value:"En este tutorial, aprenderemos cómo implementar el renderizado del lado del servidor en una aplicación Nuxt.js. Nuxt.js es un framework popular para construir aplicaciones Vue.js, y proporciona soporte integrado para el renderizado del lado del servidor.\nRequisitos previos"}]},{type:a,tag:c,props:{},children:[{type:b,value:"Antes de empezar, asegúrate de tener lo siguiente:"}]},{type:a,tag:s,props:{},children:[{type:a,tag:j,props:{},children:[{type:b,value:"Node.js (versión 12 o superior)"}]},{type:a,tag:j,props:{},children:[{type:b,value:"Nuxt.js (versión 2.14 o superior)"}]}]},{type:a,tag:k,props:{id:bw},children:[{type:b,value:bx}]},{type:a,tag:c,props:{},children:[{type:b,value:"Para crear una nueva aplicación Nuxt.js, ejecuta el siguiente comando:"}]},{type:a,tag:d,props:{code:by,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:by}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Este comando generará una nueva aplicación Nuxt.js con la configuración predeterminada. Sigue las indicaciones para personalizar la configuración en función de tus requisitos.\nHabilitación del renderizado del lado del servidor"}]},{type:a,tag:c,props:{},children:[{type:b,value:"Por defecto, Nuxt.js utiliza el renderizado del lado del cliente (CSR) para renderizar las páginas. Para habilitar el renderizado del lado del servidor, debemos modificar el archivo nuxt.config.js."}]},{type:a,tag:d,props:{code:bz,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bz}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"En el archivo nuxt.config.js, establece el mode en 'universal' y establece la propiedad ssr en true bajo la configuración de render. Esto habilitará el renderizado del lado del servidor para la aplicación.\nPrueba del renderizado del lado del servidor"}]},{type:a,tag:c,props:{},children:[{type:b,value:"Para probar el renderizado del lado del servidor, ejecuta el siguiente comando para iniciar el servidor de desarrollo:"}]},{type:a,tag:d,props:{code:bA,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bA}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Abre tu navegador y navega hasta "},{type:a,tag:y,props:{href:bB,rel:[z]},children:[{type:b,value:bB}]},{type:b,value:". Deberías ver la aplicación Nuxt.js ejecutándose en el navegador."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Para verificar que el renderizado del lado del servidor está funcionando, abre las herramientas de desarrollador en tu navegador y desactiva JavaScript. Actualiza la página y deberías seguir viendo el contenido renderizado en la página. Esto confirma que el contenido se está renderizando en el servidor y se envía al cliente.\nConclusión"}]},{type:a,tag:c,props:{},children:[{type:b,value:"En este tutorial, aprendimos cómo implementar el renderizado del lado del servidor en una aplicación Nuxt.js. Al habilitar el renderizado del lado del servidor, podemos mejorar el rendimiento y SEO de nuestra aplicación web. Con Nuxt.js, es fácil habilitar el renderizado del lado del servidor y probarlo en el entorno de desarrollo."}]}],toc:{title:e,searchDepth:f,depth:f,links:[{id:bw,depth:f,text:bx}]}},_type:n,_id:"content:blog:server-rendering.md",_source:o,_file:"blog\u002Fserver-rendering.md",_extension:p},{_path:"\u002Fblog\u002Ftutorial-github-actions",_dir:l,_draft:g,_partial:g,_locale:e,_empty:g,title:"Cómo implementar una aplicación de Nuxt.js en GitHub Pages utilizando GitHub Actions",description:bC,date:A,body:{type:m,children:[{type:a,tag:c,props:{},children:[{type:b,value:bC}]},{type:a,tag:c,props:{},children:[{type:b,value:"Antes de comenzar, asegúrate de que tu aplicación de Nuxt.js esté lista para implementar en GitHub Pages. Para hacerlo, sigue los siguientes pasos:"}]},{type:a,tag:s,props:{},children:[{type:a,tag:j,props:{},children:[{type:b,value:"Abre el archivo nuxt.config.js y agrega la siguiente línea dentro del objeto module.exports:"}]}]},{type:a,tag:d,props:{code:bD,language:x,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bD}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Esta línea asegurará que se genere una página de error personalizada para cualquier URL que no esté en tu aplicación de Nuxt.js."}]},{type:a,tag:s,props:{},children:[{type:a,tag:j,props:{},children:[{type:b,value:"Abre el archivo package.json y agrega la siguiente línea dentro del objeto scripts:"}]}]},{type:a,tag:d,props:{code:bE,language:"json",meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bE}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Esta línea asegurará que, cuando ejecutes el comando npm run deploy, se generen los archivos de construcción de tu aplicación y se publiquen en la rama gh-pages."}]},{type:a,tag:s,props:{},children:[{type:a,tag:j,props:{},children:[{type:b,value:"Asegúrate de tener el paquete gh-pages instalado en tu proyecto de Nuxt.js. Para hacerlo, ejecuta el siguiente comando en la terminal:"}]}]},{type:a,tag:d,props:{code:bF,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bF}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Ahora, con tu aplicación de Nuxt.js lista para implementar, podemos comenzar a configurar GitHub Actions."}]},{type:a,tag:s,props:{},children:[{type:a,tag:j,props:{},children:[{type:b,value:"Abre la pestaña \"Actions\" de tu repositorio en GitHub."}]},{type:a,tag:j,props:{},children:[{type:b,value:"Haz clic en el botón \"Set up a workflow yourself\" para crear un nuevo archivo de configuración de GitHub Actions."}]},{type:a,tag:j,props:{},children:[{type:b,value:"Pega el siguiente código en el archivo main.yml:"}]}]},{type:a,tag:d,props:{code:bG,language:B,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bG}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Este archivo de configuración especifica que queremos implementar nuestra aplicación en GitHub Pages cada vez que se realiza un push a la rama main del repositorio. El trabajo deploy se ejecutará en una máquina virtual de Ubuntu, que instalará Node.js, las dependencias de nuestra aplicación, generará los archivos de construcción y los publicará en la rama gh-pages utilizando la clave de implementación de GitHub Pages."}]},{type:a,tag:s,props:{},children:[{type:a,tag:j,props:{},children:[{type:b,value:"Para que GitHub Actions pueda acceder a la clave de implementación de GitHub Pages, debemos configurar un secreto en nuestro repositorio. Para hacerlo, ve a la pestaña \"Settings\" de tu repositorio, haz clic en \"Secrets\" y luego en \"New repository secret\". En el campo \"Name\", introduce \"DEPLOY_KEY\" y en el campo \"Value\", pega la clave privada que generaste anteriormente. Luego, haz clic en \"Add secret\" para guardar la configuración."}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Después de configurar el secreto, debemos modificar el archivo main.yml para que GitHub Actions pueda utilizarlo en la implementación de nuestra aplicación. En la sección \"env\", agregamos la siguiente variable de entorno:"}]},{type:a,tag:d,props:{code:bH,language:B,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bH}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Esto le dice a GitHub Actions que la clave de implementación está disponible como la variable de entorno \"DEPLOY_KEY\", y que debe usarla en el paso de implementación."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Por último, en la sección de implementación, agregamos los siguientes pasos:"}]},{type:a,tag:d,props:{code:bI,language:B,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bI}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"En el primer paso, instalamos las dependencias de nuestra aplicación con el comando \"npm ci\". En el segundo paso, generamos los archivos de construcción con el comando \"npm run generate\". Y en el tercer paso, utilizamos la acción \"peaceiris\u002Factions-gh-pages@v3\" para implementar la aplicación en GitHub Pages."}]},{type:a,tag:c,props:{},children:[{type:b,value:"En el paso de implementación, debemos especificar dos variables: \"personal_token\" y \"deploy_key\". La variable \"personal_token\" es el token de acceso personal que generamos anteriormente, y la variable \"deploy_key\" es la clave privada que configuramos como secreto en nuestro repositorio. También debemos especificar la ruta del directorio de implementación con la variable \"publish_dir\"."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Guarda los cambios en el archivo main.yml y haz un commit y un push a tu repositorio para que GitHub Actions comience a implementar tu aplicación en GitHub Pages. Después de unos minutos, podrás ver tu aplicación en línea en la URL que configuraste anteriormente."}]},{type:a,tag:c,props:{},children:[{type:b,value:"¡Felicitaciones! Ahora has implementado tu aplicación de Nuxt.js en GitHub Pages utilizando GitHub Actions. Este es un gran logro que te ayudará a compartir tu trabajo con el mundo. ¡Sigue adelante y sigue construyendo cosas increíbles!"}]}],toc:{title:e,searchDepth:f,depth:f,links:[]}},_type:n,_id:"content:blog:tutorial-github-actions.md",_source:o,_file:"blog\u002Ftutorial-github-actions.md",_extension:p},{_path:"\u002Fblog\u002Fubuntu-latest",_dir:l,_draft:g,_partial:g,_locale:e,_empty:g,title:"Waiting for a runner to pick up this job",description:bJ,date:"2023-04-05",author:r,body:{type:m,children:[{type:a,tag:c,props:{},children:[{type:b,value:bJ}]},{type:a,tag:c,props:{},children:[{type:b,value:"Después de buscar en StackOverflow, descubrí que una posible razón podría ser que Github ya no soporta el sistema operativo que estaba solicitando. En mi caso, estaba usando \"ubuntu 18.04\" y tuve que cambiarlo a \"ubuntu-latest\" para que funcionara correctamente."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Es probable que Github no soporte más esa versión de Ubuntu. Resulta que Github dejó de soportar Ubuntu 16.04 en septiembre de 2021, y sólo admite sistemas operativos específicos. Si estás teniendo problemas con las acciones de Github, verifica la lista de sistemas operativos soportados en la documentación oficial."}]},{type:a,tag:c,props:{},children:[{type:b,value:"Espero que esta información te sea útil si te encuentras con un problema similar. La solución puede ser tan simple como cambiar la versión del sistema operativo en tu archivo de configuración."}]}],toc:{title:e,searchDepth:f,depth:f,links:[]}},_type:n,_id:"content:blog:ubuntu-latest.md",_source:o,_file:"blog\u002Fubuntu-latest.md",_extension:p},{_path:"\u002Fblog\u002Futterances",_dir:l,_draft:g,_partial:g,_locale:e,_empty:g,title:bK,description:bL,author:r,date:O,body:{type:m,children:[{type:a,tag:L,props:{id:"cómo-configuro-utterances"},children:[{type:b,value:bK}]},{type:a,tag:c,props:{},children:[{type:b,value:bL}]},{type:a,tag:F,props:{},children:[{type:a,tag:j,props:{},children:[{type:b,value:"Elija el repositorio: Utterances requiere un repositorio de GitHub para almacenar los comentarios. Puede usar un repositorio existente o crear uno nuevo. El repositorio debe ser público y debe tener acceso de escritura."}]},{type:a,tag:j,props:{},children:[{type:b,value:"Genere un token de acceso: para permitir que Utterances acceda al repositorio, debe generar un token de acceso personal de GitHub. Para generar el token, vaya a la configuración de su cuenta de GitHub, haga clic en \"Configuración de desarrollador\" \u003E \"Tokens de acceso personal\" y luego haga clic en \"Generar nuevo token\". Asigne un nombre al token, seleccione el alcance \"repo\" y luego haga clic en \"Generar token\". Copie el token en un lugar seguro, ya que no podrá volver a verlo."}]},{type:a,tag:j,props:{},children:[{type:b,value:"Instale Utterances: puede instalar Utterances en su aplicación Nuxt.js 3 agregando el script de Utterances a su archivo "},{type:a,tag:q,props:{},children:[{type:b,value:E}]},{type:b,value:". Puede hacerlo agregando el siguiente código a su archivo "},{type:a,tag:q,props:{},children:[{type:b,value:E}]},{type:b,value:aF}]}]},{type:a,tag:d,props:{code:bM,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bM}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Reemplace los siguientes marcadores de posición:"}]},{type:a,tag:s,props:{},children:[{type:a,tag:j,props:{},children:[{type:a,tag:q,props:{},children:[{type:b,value:"\u003CNOMBRE DE USUARIO\u003E\u002F\u003CREPOSITORIO\u003E"}]},{type:b,value:": el nombre de usuario y el nombre del repositorio de GitHub que creó en el paso 1."}]},{type:a,tag:j,props:{},children:[{type:a,tag:q,props:{},children:[{type:b,value:"\u003CTHEME\u003E"}]},{type:b,value:": El nombre del tema de Utterances que desea utilizar. Puede usar el tema predeterminado configurando esto en "},{type:a,tag:q,props:{},children:[{type:b,value:"github-light"}]},{type:b,value:bN},{type:a,tag:q,props:{},children:[{type:b,value:"github-dark"}]},{type:b,value:", o puede crear su propio tema siguiendo las instrucciones en la documentación de Utterances."}]},{type:a,tag:j,props:{},children:[{type:a,tag:q,props:{},children:[{type:b,value:"\u003CETIQUETA\u003E"}]},{type:b,value:": (Opcional) Una etiqueta para agregar a cada problema creado por Utterances. Esto se puede usar para diferenciar entre problemas creados por Expresiones y otros problemas en el repositorio."}]},{type:a,tag:j,props:{},children:[{type:a,tag:q,props:{},children:[{type:b,value:"\u003CISSUE-TERM\u003E"}]},{type:b,value:": (Opcional) El término a utilizar al crear nuevos problemas. Puede usar el valor predeterminado de "},{type:a,tag:q,props:{},children:[{type:b,value:"ruta de acceso"}]},{type:b,value:" para crear un hilo de problema separado para cada página de su sitio web."}]},{type:a,tag:j,props:{},children:[{type:a,tag:q,props:{},children:[{type:b,value:"\u003CCLEANUP\u003E"}]},{type:b,value:": (Opcional) Si cerrar automáticamente los problemas que no han tenido nuevos comentarios en un cierto período de tiempo. Puede establecer esto en "},{type:a,tag:q,props:{},children:[{type:b,value:"verdadero"}]},{type:b,value:bN},{type:a,tag:q,props:{},children:[{type:b,value:bO}]},{type:b,value:". De forma predeterminada, se establece en "},{type:a,tag:q,props:{},children:[{type:b,value:bO}]},{type:b,value:"."}]}]},{type:a,tag:F,props:{start:4},children:[{type:a,tag:j,props:{},children:[{type:b,value:"Habilite la aplicación Utterances: para permitir que Utterances publique comentarios en el repositorio, debe agregar la aplicación Utterances al repositorio. Para hacer esto, vaya a la configuración del repositorio, haga clic en \"Aplicaciones GitHub instaladas\" y luego haga clic en \"Configurar\" junto a la aplicación Utterances. Otorgue a la aplicación acceso al repositorio."}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Después de completar estos pasos, debería poder ver el cuadro de comentarios Expresiones en su sitio web o aplicación web. Los visitantes pueden publicar comentarios usando su cuenta de GitHub y los comentarios se almacenarán como problemas en el repositorio configurado."}]}],toc:{title:e,searchDepth:f,depth:f,links:[]}},_type:n,_id:"content:blog:utterances.md",_source:o,_file:"blog\u002Futterances.md",_extension:p},{_path:"\u002Fblog\u002Fvariables-de-entorno",_dir:l,_draft:g,_partial:g,_locale:e,_empty:g,title:"Cómo acceder a variables de entorno en un proyecto Nuxt.js 3 estático",description:bP,date:C,author:r,body:{type:m,children:[{type:a,tag:c,props:{},children:[{type:b,value:bP}]},{type:a,tag:c,props:{},children:[{type:b,value:"A continuación se presentan los pasos para acceder a las variables de entorno en un proyecto Nuxt.js 3 estático:"}]},{type:a,tag:t,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"Define tus variables de entorno en un archivo .env en la raíz de tu proyecto. Por ejemplo:"}]}]},{type:a,tag:d,props:{code:bQ,language:"makefile",meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bQ}]}]}]},{type:a,tag:F,props:{start:f},children:[{type:a,tag:j,props:{},children:[{type:b,value:"En el archivo nuxt.config.js, agrega el siguiente código:"}]}]},{type:a,tag:d,props:{code:bR,language:x,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bR}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Esto expondrá tu variable de entorno MY_VARIABLE como una propiedad myVariable en el objeto publicRuntimeConfig."}]},{type:a,tag:t,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"Ahora puedes acceder a la variable de entorno en tus componentes de la siguiente manera:"}]}]},{type:a,tag:d,props:{code:bS,language:x,meta:h},children:[{type:a,tag:i,props:{},children:[{type:a,tag:d,props:{__ignoreMap:e},children:[{type:b,value:bS}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Ten en cuenta que debes usar this.$config.myVariable en lugar de process.env.MY_VARIABLE para acceder a la variable de entorno en tus componentes."}]},{type:a,tag:c,props:{},children:[{type:b,value:"¡Eso es todo! Ahora deberías poder acceder a las variables de entorno en tu proyecto Nuxt.js 3 estático."}]}],toc:{title:e,searchDepth:f,depth:f,links:[]}},_type:n,_id:"content:blog:variables-de-entorno.md",_source:o,_file:"blog\u002Fvariables-de-entorno.md",_extension:p}]},prerenderedAt:1680741948164}}("element","text","p","code","",2,false,null,"pre","li","h2","blog","root","markdown","content","md","code-inline","Jorge","ul","blockquote","conclusión","Conclusión","python","javascript","a","nofollow","2023-03-14","yaml","2023-03-24","font-awesome-icon","nuxt.config.js","ol","Nuxt3 ha introducido muchas mejoras, una de las cuales es el uso de plugins en la aplicación. Esto permite una fácil integración de herramientas y servicios de terceros, como Google Analytics.","\nnpm install --save-dev vue-gtag-next\n","\nimport VueGtag from 'vue-gtag-next'\n\nexport default defineNuxtPlugin((nuxtApp) =\u003E {\n  nuxtApp.vueApp.use(VueGtag, {\n    property: {\n      id: 'GA_MEASUREMENT_ID'\n    }\n  })\n})\n","Cómo configurar los módulos","En Nuxtjs 3, la condiguración de los módulos en nuxt.config.js se pone dentro del mismo listado de los módulos y no, aparte.","h1","export default {\n  modules: [\n    \u002F\u002F Simple usage\n    '@nuxtjs\u002Faxios',\n\n    \u002F\u002F With options\n    ['@nuxtjs\u002Faxios', {\n      baseURL: 'https:\u002F\u002Fapi.example.com'\n    }]\n  ]\n}\n\n","La página de \"Acerca de\" no despliega a pesar de haber intentado varios métodos:","2023-02-14T00:00:00.000Z","\u003Cscript\u003E\r\n  export default {\r\n    async asyncData({ $content }) {\r\n      const aboutPage = await $content('about').fetch()\r\n  \r\n      return { aboutPage }\r\n    },\r\n  }\r\n  \u003C\u002Fscript\u003E  \n","\u003Cscript\u003E\r\n  export default {\r\n    async asyncData() {\r\n      const about = await this.$content('about').fetch()\r\n      return { about }\r\n    },\r\n  }\r\n\u003C\u002Fscript\u003E\n","\u003Cscript\u003E\r\nexport default {\r\n  async asyncData() {\r\n    const aboutData = await this.$content('about').fetch()\r\n    console.log(aboutData)\r\n    return { $page: { about: aboutData || {} } }\r\n  },\r\n}\r\n\u003C\u002Fscript\u003E\n","FontAwesome proporciona más de 2,000 iconos gratuitos para usar en tus proyectos. Aquí te explicamos cómo comenzar a usarlos en tu aplicación Nuxt 3, incluyendo cómo mejorar el rendimiento importando solo los iconos que necesitas.","instalación","Instalación","npm i --save @fortawesome\u002Fvue-fontawesome@latest-3\n","npm i --save @fortawesome\u002Ffontawesome-svg-core\nnpm i --save @fortawesome\u002Ffree-brands-svg-icons\n","\"dependencies\": {\n\"@fortawesome\u002Ffontawesome-svg-core\": \"^6.2.1\",\n\"@fortawesome\u002Ffree-brands-svg-icons\": \"^6.2.1\",\n\"@fortawesome\u002Fvue-fontawesome\": \"^3.0.2\"\n}\n","configuración","Configuración","css: [\n'@fortawesome\u002Ffontawesome-svg-core\u002Fstyles.css'\n]\n","subconjuntos-para-mejorar-el-rendimiento","Subconjuntos para mejorar el rendimiento","import { library, config } from '@fortawesome\u002Ffontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome\u002Fvue-fontawesome'\nimport { faTwitterSquare, faTwitch, faGithubSquare } from '@fortawesome\u002Ffree-brands-svg-icons'\n\nlibrary.add(faTwitterSquare, faTwitch, faGithubSquare)\n\n\u002F\u002F Esto es importante, vamos a dejar que Nuxt se encargue del CSS\nconfig.autoAddCss = false\n\nexport default defineNuxtPlugin((nuxtApp) =\u003E {\nnuxtApp.vueApp.component('font-awesome-icon', FontAwesomeIcon, {})\n})\n","\u002F\u002F ...\n\nimport { fab } from '@fortawesome\u002Ffree-brands-svg-icons'\nlibrary.add(fab)\n\n\u002F\u002F ...\n","usando-los-iconos","Usando los iconos","\u003Cfont-awesome-icon icon=\"fa-brands fa-twitter-square\" \u002F\u003E\n\u003Cfont-awesome-icon icon=\"fa-brands fa-youtube-square\" \u002F\u003E\n\u003Cfont-awesome-icon icon=\"fa-brands fa-github-square\" \u002F\u003E\n","\u003Ctemplate\u003E\n\u003Cdiv id=\"icons\"\u003E\n    \u003Ca v-for=\"link in socialLinks\" :key=\"link.name\" :href=\"link.url\" target=\"blank\"\u003E\n        \u003Cfont-awesome-icon :icon=\"['fab', link.icon]\" \u002F\u003E\n    \u003C\u002Fa\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Ftemplate\u003E\n\u003Cscript setup\u003E\nconst socialLinks = [\n  {\n    name: 'Twitter',\n    url: 'https:\u002F\u002Ftwitter.com\u002Fceceliacreates',\n    icon: 'twitter-square'\n\n  },\n  {\n    name: 'Youtube',\n    url: 'https:\u002F\u002Fwww.youtube.com\u002F@ceceliacreates',\n    icon: 'youtube-square'\n  },\n  {\n    name: 'GitHub',\n    url: 'https:\u002F\u002Fgithub.com\u002Fceceliacreates',\n    icon: 'github-square'\n  }\n\n]\n\u003C\u002Fscript\u003E\n","recursos","Recursos","Si has creado un sitio web estático utilizando Nuxt.js y quieres publicarlo en GitHub Pages, puedes utilizar la herramienta gh-pages para hacerlo de forma sencilla. En esta entrada de blog, te explicaré cómo hacerlo.","paso-1-instalar-la-herramienta-gh-pages","Paso 1: Instalar la herramienta gh-pages","npm install gh-pages --save-dev\n","paso-2-generar-el-sitio-web-estático-con-nuxtjs","Paso 2: Generar el sitio web estático con Nuxt.js","nuxt generate\n","paso-3-configurar-la-herramienta-gh-pages","Paso 3: Configurar la herramienta gh-pages","\"deploy\": \"gh-pages -d dist\",\n\"predeploy\": \"npm run generate\"\n","paso-4-publicar-el-sitio-web-estático-en-github-pages","Paso 4: Publicar el sitio web estático en GitHub Pages","npm run deploy\n","¡Bienvenidos! En este artículo vamos a explorar cómo usar GitHub Actions para la integración continua y la implementación continua (CI\u002FCD) en un proyecto de Nuxt.js 3.","qué-son-las-github-actions","¿Qué son las GitHub Actions?","preparación-del-entorno","Preparación del entorno","configuración-de-github-actions","Configuración de GitHub Actions","name: CI\u002FCD\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions\u002Fcheckout@v2\n      - name: Install dependencies\n        run: npm install\n      - name: Build\n        run: npm run build\n      - name: Deploy\n        uses: peaceiris\u002Factions-gh-pages@v3.7.0\n        with:\n          deploy_key: ${{ secrets.ACCESS_TOKEN }}\n          publish_dir: .\u002Fdist\n","Se clona el repositorio en la máquina virtual.\nSe instalan las dependencias de NPM.\nSe construye el proyecto con el comando npm run build.\nSe despliega la aplicación en GitHub Pages utilizando la acción peaceiris\u002Factions-gh-pages.\n",":","export default {\n  head: {\n    script: [\n      {\n        src: 'https:\u002F\u002Fpagead2.googlesyndication.com\u002Fpagead\u002Fjs\u002Fadsbygoogle.js',\n        'data-ad-client': 'TU-CÓDIGO-DE-CLIENTE-DE-GOOGLE-ADSENSE'\n      }\n    ]\n  }\n}\n","En este artículo, te mostraré cómo implementar Github Actions en tu blog Hugo para automatizar el proceso de construcción, minimización y despliegue de tu sitio web en AWS S3 Bucket.","\nname: Deploy website to S3 bucket\n\non:\n  push:\n    branches:\n      - master\n\njobs:\n  deploy:\n    runs-on: ubuntu-18.04\n    steps:\n      - uses: actions\u002Fcheckout@v2\n        with:\n          submodules: true  # Fetch Hugo themes \n          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod\n\n      - name: Setup Hugo\n        uses: peaceiris\u002Factions-hugo@v2\n        with:\n          hugo-version: 'latest'\n          extended: true\n\n      - name: Configure AWS Credentials\n        uses: aws-actions\u002Fconfigure-aws-credentials@v1\n        with:\n          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n          aws-region: \u003CYour-Region\u003E\n\n      - name: Build website\n        run: hugo --minify\n\n      - name: Hugo deploy static site to S3 bucket and invalidate Cloudfront cache\n        run: hugo deploy --maxDeletes -1 --invalidateCDN\n","Si alguna vez has intentado convertir un string en formato JSON en Python, es posible que te hayas encontrado con errores causados por caracteres no compatibles con el formato. Esto puede ser frustrante, especialmente cuando estás trabajando con una gran cantidad de datos y necesitas que todo esté en formato JSON para poder procesarlo correctamente.","\nimport re\nimport json\n\ndef clean_string_for_json(s):\n    # Remove page breaks and other non-ASCII characters\n    s = re.sub(r'[^\\x00-\\x7F]+', '', s)\n    s = s.replace('\\n', '').replace('\\r', '')\n\n    # Load string as JSON to check for compatibility\n    try:\n        json.loads(s)\n    except ValueError:\n        # Replace non-compliant characters with a space\n        s = re.sub(r'[^\\x00-\\x7F]+', ' ', s)\n\n    return s\n","Hoy he estado trabajando en un problema bastante frustrante: intentar agregar un feed RSS a una aplicación NuxtJS 3. Después de varios intentos, todavía no he podido hacerlo funcionar correctamente.","https:\u002F\u002Fbeta.openai.com\u002Fsignup\u002F","pip install openai\n","\nimport openai\n\nopenai.api_key = \"tu_api_key\"\n","\nmodel_engine = \"davinci\"\n","\nprompt = \"Hola, ¿cómo estás?\"\nresponse = openai.Completion.create(\n    engine=model_engine,\n    prompt=prompt,\n    max_tokens=60,\n    n=1,\n    stop=None,\n    temperature=0.7,\n)\n\nprint(response.choices[0].text)\n","\nresponse = openai.Completion.create(\n  engine=\"text-davinci-002\",\n  prompt=\"Hola, ¿cómo estás?\",\n  max_tokens=50\n)\n","\nprint(response.choices[0].text)\n","Recientemente, decidí utilizar GitHub Actions para automatizar la implementación de mi aplicación de NuxtJS 3 en GitHub Pages. Aunque había utilizado GitHub Actions en proyectos anteriores, nunca lo había usado con NuxtJS 3. Como resultado, me encontré con varios problemas mientras intentaba implementar mi aplicación en GitHub Pages. En esta publicación de blog, compartiré algunos de los problemas que enfrenté y cómo los resolví.","problema-1-configuración-incorrecta-de-github-actions","Problema 1: Configuración incorrecta de GitHub Actions","name: Deploy to GitHub Pages\n\non:\n    push:\n        branches:\n            - main\n\njobs:\n    deploy:\n        runs-on: ubuntu-latest\n        steps:\n            - name: Checkout code\n              uses: actions\u002Fcheckout@v2\n\n            - name: Install dependencies\n              run: npm install\n\n            - name: Build\n              run: npm run generate\n\n            - name: Deploy\n              uses: peaceiris\u002Factions-gh-pages@v3\n              with:\n               personal_token: ${{ secrets.ACCESS_TOKEN }}\n               external_repository: freebot\u002Ffreebot.github.io\n               publish_branch: gh-pages\n               publish_dir: .output\u002Fpublic\n","problema-2-el-archivo-packagejson-no-estaba-configurado-correctamente","Problema 2: El archivo package.json no estaba configurado correctamente","problema-3-las-acciones-de-jamesives-no-funcionaron","Problema 3: Las acciones de JamesIves no funcionaron","Tener un archivo robots.txt es muy importante ya que ayuda a controlar que Google y otros motores de búsqueda como Bing indexen el contenido del sitio web. Esto se debe a que lo primero que revisa un rastreador cuando visita un sitio web es si existe robots.txt, por lo que determina cuándo se debe rastrear el contenido o no.","instalar-el-paquete-nuxtjsrobots","Instalar el paquete nuxtjs\u002Frobots","yarn add @nuxtjs\u002Frobots\n","export default {\n  modules: [\n    '@nuxtjs\u002Frobots'\n  ],\n  robots: {\n    \u002F* opciones del módulo *\u002F\n  }\n}\n","configuración-simple","Configuración simple","export default {\n  robots: {\n    UserAgent: '*',\n    Disallow: ''\n  }\n}\n","configuración-de-múltiples-agentes-de-usuario","Configuración de múltiples agentes de usuario","export default {\n  robots: [\n    {\n      UserAgent: 'Googlebot',\n      Disallow: '\u002Fusuario',\n    },\n    {\n      UserAgent: '*',\n      Disallow: '\u002Fadmin',\n    },\n  ]\n}\n","configuración-de-función","Configuración de función","export default {\n  robots: () =\u003E {\n    if (algunaLogicaAquí) {\n      return {\n        UserAgent: '*',\n        Disallow: '\u002F'\n      }\n    }\n  }\n}\n","ejecutar-yarn-dev-npm-run-dev","Ejecutar \"yarn dev\" \u002F \"npm run dev\"","User-agent: Googlebot\nDisallow: \u002Fusuarios\nUser-agent: Bingbot\nDisallow: \u002Fadmin\n","Hace poco vi un video de Salvaje en YouTube que mostraba cómo conectar ChatGPT a Google Spreadsheets. Después de instalar la extensión correspondiente, en la primer columna colocamos el siguiente prompt:","Escriba un texto pequeño en español sobre lo que trata este libro y su precio en Amazon\n","=GPT_LIST(\"Crea una lista de los mejores ibros de emprendimiento, solo bestsellers, no repitas ninguno, solo el título sin el autor\")\n","=GPT(A2;B2)\n","=GPT_TABLE(\"Crea una tabla con el nombre de libro, autor de libro, categoria del libro, precio del libro\";F2:F11)\n","El renderizado del lado del servidor (SSR) es una técnica utilizada para mejorar el rendimiento y la optimización de motores de búsqueda (SEO) de aplicaciones web. En una aplicación de lado del cliente tradicional, el navegador solicita los archivos HTML, CSS y JavaScript del servidor y luego renderiza la página en el lado del cliente. Con el renderizado del lado del servidor, el servidor genera la marca HTML y la envía al cliente, lo que mejora el tiempo de carga inicial y hace que el contenido sea más accesible a los motores de búsqueda.","creación-de-una-aplicación-nuxtjs","Creación de una aplicación Nuxt.js","\nnpx create-nuxt-app mi-aplicacion\n","\nexport default {\n  mode: 'universal',\n  \u002F*\n  ** Configuración del renderizado del lado del servidor\n  *\u002F\n  render: {\n    ssr: true\n  },\n  \u002F\u002F otras opciones de configuración\n}\n","npm run dev\n","http:\u002F\u002Flocalhost:3000","Si estás desarrollando una aplicación de Nuxt.js y deseas publicarla en GitHub Pages, es posible que te hayas preguntado cómo implementarla. En este tutorial, te guiaré a través del proceso de configuración de GitHub Actions para implementar automáticamente tu aplicación de Nuxt.js en GitHub Pages cada vez que realices un push a la rama principal de tu repositorio.","\nmodule.exports = {\n  \u002F\u002F ...\n  generate: {\n    fallback: true\n  }\n  \u002F\u002F ...\n}\n","\n\"deploy\": \"npm run generate && gh-pages -d dist\"\n","\nnpm install gh-pages --save-dev\n","\nname: Deploy to GitHub Pages\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions\u002Fcheckout@v2\n    - name: Set up Node.js\n      uses: actions\u002Fsetup-node@v2.4.4\n      with:\n        node-version: '16.x'\n    - name: Install dependencies\n      run: npm install\n    - name: Build\n      run: npm run generate\n    - name: Deploy\n      uses: peaceiris\u002Factions-gh-pages@v3\n      with:\n        deploy_key: ${{ secrets.GH_PAGES_DEPLOY_KEY }}\n        publish_dir: .\u002Fdist\n","\nenv:\n  DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}\n","\n- name: Install dependencies\n  run: npm ci\n\n- name: Build application\n  run: npm run generate\n\n- name: Deploy to GitHub Pages\n  uses: peaceiris\u002Factions-gh-pages@v3\n  with:\n    personal_token: ${{ secrets.PERSONAL_TOKEN }}\n    deploy_key: ${{ env.DEPLOY_KEY }}\n    publish_dir: .\u002Fdist\u002F\n","Hoy tuve un problema con el CD\u002FCI de Github. Al usar las acciones de Github con mi configuración, el proceso tardaba mucho tiempo en ejecutarse y se mostraba el mensaje \"Waiting for a runner to pick up this job\". Me pregunté qué significaba 'runner' y cómo podía resolver el problema.","¿Cómo configuro Utterances?","Para configurar Utterances, un sistema de comentarios que utiliza problemas de GitHub para comentarios, para su sitio web o aplicación web, debe seguir estos pasos:","export default {\n  head: {\n    script: [\n      {\n        src: \"https:\u002F\u002Futteranc.es\u002Fclient.js\",\n        async: true,\n        \"data-utterances-repo\": \"\u003CUSERNAME\u003E\u002F\u003CREPOSITORY\u003E\",\n        \"data-utterances-theme\": \"\u003CTHEME\u003E\",\n        \"data-utterances-label\": \"\u003CLABEL\u003E\",\n        \"data-utterances-issue-term\": \"\u003CISSUE-TERM\u003E\",\n        \"data-utterances-cleanup\": \"\u003CCLEANUP\u003E\",\n      },\n    ],\n  },\n};\n\n"," o ","falso","Para acceder a las variables de entorno en un proyecto Nuxt.js 3 estático, puedes usar el objeto publicRuntimeConfig en el archivo nuxt.config.js.","\nMY_VARIABLE=my_value\n","\narduino\n\nexport default {\n  publicRuntimeConfig: {\n    myVariable: process.env.MY_VARIABLE\n  }\n}\n","\nexport default {\n  async fetch() {\n    const myVariable = this.$config.myVariable\n    console.log(myVariable)\n  }\n}\n"))